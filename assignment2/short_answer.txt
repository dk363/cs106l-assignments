Marriage Pact
-------------

Q1. It is your choice to use either an ordered or unordered set. In a few sentences, what are some of the tradeoffs between the two? Additionally, please give an example (that has not been shown in lecture) of a valid hash function that could be used to hash student names for an unordered set.
A1. 有序集合查找和插入的时间复杂度是 O(lgN) 其具体实现是红黑树树 无序集合查找的时间复杂度是 O(1) 具体实现是并查集
    struct studentHash {
        std::size_t operate(std::string& name) {
            std::size_t hash = 0;
            for (char c : name) {
                hash = hash * 131 + c;
            }
            return hash;
        }
    }

Q2. Note that we are saving pointers to names in the queue, not names themselves. Why might this be desired in this problem? What happens if the original set where the names are stored goes out of scope and the pointers are referenced?
A2. 用指针可以减少空间方面的开销，而且 const std::string 保持了程序的健壮性，防止被意外修改 nullptrexception